// Generated by IcedCoffeeScript 1.2.0j
(function() {
  var iced, ret, roominfo, userinfo, __iced_deferrals,
    __slice = [].slice,
    _this = this;

  iced = {
    Deferrals: (function() {

      function _Class(_arg) {
        this.continuation = _arg;
        this.count = 1;
        this.ret = null;
      }

      _Class.prototype._fulfill = function() {
        if (!--this.count) return this.continuation(this.ret);
      };

      _Class.prototype.defer = function(defer_params) {
        var _this = this;
        ++this.count;
        return function() {
          var inner_params, _ref;
          inner_params = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
          if (defer_params != null) {
            if ((_ref = defer_params.assign_fn) != null) {
              _ref.apply(null, inner_params);
            }
          }
          return _this._fulfill();
        };
      };

      return _Class;

    })(),
    findDeferral: function() {
      return null;
    }
  };
  __iced_k = function() {};

  return;

  (function(__iced_k) {
    __iced_deferrals = new iced.Deferrals(__iced_k, {
      filename: "/Users/alastair/Projects/jukebox/html/js/test.iced"
    });
    Jukebox.User.rdioLogin(__iced_deferrals.defer({
      assign_fn: (function() {
        return function() {
          return ret = arguments[0];
        };
      })(),
      lineno: 8
    }));
    __iced_deferrals._fulfill();
  })(function() {
    $("#info").append($("<p>Checking for user</p>"));
    (function(__iced_k) {
      __iced_deferrals = new iced.Deferrals(__iced_k, {
        filename: "/Users/alastair/Projects/jukebox/html/js/test.iced"
      });
      Jukebox.User.create(__iced_deferrals.defer({
        assign_fn: (function() {
          return function() {
            return userinfo = arguments[0];
          };
        })(),
        lineno: 10
      }));
      __iced_deferrals._fulfill();
    })(function() {
      if (userinfo.isNew) {
        $("#info").append($("<p>Created user " + userinfo.userid + "</p>"));
      } else {
        $("#info").append($("<p>Found user " + userinfo.userid + "</p>"));
      }
      (function(__iced_k) {
        __iced_deferrals = new iced.Deferrals(__iced_k, {
          filename: "/Users/alastair/Projects/jukebox/html/js/test.iced"
        });
        Jukebox.Room.join(1, __iced_deferrals.defer({
          assign_fn: (function() {
            return function() {
              return roominfo = arguments[0];
            };
          })(),
          lineno: 16
        }));
        __iced_deferrals._fulfill();
      })(function() {
        $("#info").append($("<p>Joined room " + roominfo.roomid + "</p>"));
        $("#info").append($("<p>Upcoming tracks: " + roominfo.tracks.join(", ") + "</p>"));
        return $("#search").bind("submit", function(e) {
          var ret, searchFor, ___iced_passed_deferral, __iced_deferrals,
            _this = this;
          ___iced_passed_deferral = iced.findDeferral(arguments);
          e.preventDefault();
          searchFor = $("#txtSearch").val();
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/Users/alastair/Projects/jukebox/html/js/test.iced"
          });
          Jukebox.Tracks.search(searchFor, __iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                return ret = arguments[0];
              };
            })(),
            lineno: 24
          }));
          __iced_deferrals._fulfill();
        });
      });
    });
  });

}).call(this);
